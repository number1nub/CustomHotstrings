#NoEnv
#SingleInstance, Force
SetWorkingDir, %A_ScriptDir%
SetTitleMatchMode, 3
regPath := "Software\WSNHapps\CustomHotstrings"
try {
	RegRead, hkEnabled, HKCU, %regPath%, hkEnabled
	RegRead, hkKeys, HKCU, %regPath%, hkKeys
} catch {
	hkEnabled:=1, hkKeys:="^+1"
	RegWrite, REG_DWORD, HKCU, %regPath%, hkEnabled, %hkEnabled%
	RegWrite, REG_SZ, HKCU, %regPath%, hkKeys, %hkKeys%
}
RegRead, editorPath, HKCU, %regPath%, EditorPath
if (ErrorLevel || !editorPath)
	editorPath:=FileExist("Custom Hotstrings.exe")?"Custom Hotstrings.exe":FileExist("Custom Hotstrings.ahk")?"Custom Hotstrings.ahk":""
#If (hkEnabled)
hotkey, %hkKeys%, HSEditor
#If
Menu, Tray, NoStandard
Menu, Tray, Add, % "Launch Hotstring Editor " hkToString(hkKeys), HSEditor
Menu, Tray, default, % "Launch Hotstring Editor " hkToString(hkKeys)
Menu, Tray, Add, Hotkey Enabled, hkToggle
Menu, Tray, % (hkEnabled ? "check" : "uncheck"), Hotkey Enabled
Menu, Tray, Add, Customize the hotkey, hkChange
Menu, Tray, Add,
Menu, Tray, Add, Check for Update, Update
Menu, Tray, Add,
Menu, Tray, Add, Reload
Menu, Tray, Add, Exit
Menu, Tray, Tip, My Custom Hotstrings`n`nrunning...
if (!FileExist("hotstrings.ico"))
	try URLDownloadToFile, http://files.wsnhapps.com/hotstrings/hotstrings.ico, hotstrings.ico
	catch
		FileDelete, hotstrings.ico
Menu, Tray, Icon, % FileExist(mIco:="hotstrings.ico") ? mIco : ""
TrayTip, Custom Hotstrings, Reloaded!, 800, 1
return
HSEditor:
if (editorPath){
	SplitPath, editorPath,, editorDir
	Run, % editorPath, % editorDir
} else
	MsgBox 4144,, Couldn't find Custom Hotstrings editor...
return
Update:
if (FileExist("update.exe"))
	Run, update.exe
else
	MsgBox 4144,, Unable to find updater file.`n`nTry visiting http://wsnhapps.com to re-download the application.
return
hkToggle:
hkEnabled := !hkEnabled
Menu, Tray, ToggleCheck, Hotkey Enabled
RegWrite, REG_DWORD, HKCU,Software\WSNHapps\CustomHotstrings, hkEnabled, % hkEnabled ? 1 : 0
return
hkChange:
Gui, +AlwaysOnTop +OwnDialogs
InputBox, newHK, Hotkey Customization,Enter the hotkey to open the HS editor.`n`nUse ^`, !`, + and # for Ctrl`, Alt`, Shift and Win`, respectively,,,,,,,,%hkKeys%
if (ErrorLevel || !newHK || newHK=hkKeys)
	return
RegWrite, REG_SZ, HKCU, Software\WSNHapps\CustomHotstrings, hkKeys, %newHK%
Reload
return
ttoff:
settimer, ttoff, off
ToolTip
TrayTip
return
Exit:
ExitApp
Reload:
Reload
hkToString(str)	{
	StringReplace, v, str, +, Shift+
	StringReplace, v, v, ^, Ctrl+
	StringReplace, v, v, !, Alt+	
	StringReplace, v, v, #, Win+
	return "(" v ")"
}
PasteVal(sendTxt) {
	WinGetClass, wClass, A
	CBBU:=Clipboard, Clipboard:=""
	Clipboard:=ExpandEnv(sendTxt)
	SendInput, % wClass="ConsoleWindowClass" ? "!{Space}ep" : "^v"
	sleep 200
	Clipboard := CBBU
}
ExpandEnv(str) {
	VarSetCapacity(dest, 2000)
	DllCall("ExpandEnvironmentStrings", "str", str, "str", dest, int, 1999, "Cdecl int")
	Return dest
}
#Hotstring, * C1 R B ?
;****************************************************************************************************
;______________________________________ BEGIN USER HOTSTRINGS _______________________________________

:?0C:btw::by the way
::lol::laugh out loud